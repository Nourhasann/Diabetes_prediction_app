# -*- coding: utf-8 -*-
"""streamlit_app.py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MeCzmSeyY2lQ3GXlMUwsPjSax4Mt5x6d
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit

"""After installing `streamlit`, you can run the following code."""

import streamlit as st
import numpy as np
import pickle # Import pickle

# Load saved model and scaler (assuming these are available in the environment)
model = pickle.load(open("decision_tree_model (2).sav", "rb"))
scaler = pickle.load(open("scaler (1).sav", "rb"))

st.title("ü©∫ Diabetes Prediction App")
st.write("Enter patient details to check if they are diabetic or not.")

# Collect user input
pregnancies = st.number_input("Pregnancies", min_value=0, step=1)
glucose = st.number_input("Glucose Level", min_value=0)
blood_pressure = st.number_input("Blood Pressure", min_value=0)
skin_thickness = st.number_input("Skin Thickness", min_value=0)
insulin = st.number_input("Insulin Level", min_value=0)
bmi = st.number_input("BMI", min_value=0.0, format="%.1f")
dpf = st.number_input("Diabetes Pedigree Function", min_value=0.0, format="%.3f")
age = st.number_input("Age", min_value=0, step=1)

# Button for prediction
if st.button("Predict"):
    input_data = (pregnancies, glucose, blood_pressure, skin_thickness,
                  insulin, bmi, dpf, age)

    # Convert input to numpy, reshape, scale
    input_data_as_numpy = np.asarray(input_data).reshape(1, -1)
    input_data_scaled = scaler.transform(input_data_as_numpy)

    # Make prediction
    prediction = model.predict(input_data_scaled)

    # Show result
    if prediction[0] == 0:
        st.success("‚úÖ The person is **Not Diabetic**")
    else:
        st.error("‚ö†Ô∏è The person is **Diabetic**")

